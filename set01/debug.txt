PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem01.c
C program to print your name:
Divya
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> git commit -m "test"
[main b32431d] test
 5 files changed, 133 insertions(+), 9 deletions(-)
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401463
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 13220.0x2428]
[New Thread 13220.0x958]

Breakpoint 1, 0x00401463 in main ()
(gdb) n
Single stepping until exit from function main,
which has no line number information.
C program to print your name:
Divya
0x00401288 in __register_frame_info ()
(gdb)


problem10

PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 .\problem10.c  
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file .\problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 12560.0x1afc]
[New Thread 12560.0x2764]

Breakpoint 1, main () at .\problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) p str1
$1 = "hello\000a\000ñd·v\b\000\000\000=n¶v#n¶v½\032°(à\022@\000à\022@\000\000\000\000\000 \032@\000D_a\000\bÿa\000Iÿa\000AI¶v%kj^_ÿÿÿ\bÿa\000-o¶v \032@\000Pÿa\000û\032@\000 \032@\000\000\000\000\000\000`$"
(gdb) p str2
$2 = "hello\000a\000òpµv\000\000_\000\000\000\000\000\220\f_\000é\032°(\b\000\000\000\220\f_\000\230\f_\000\001\000\000\000\230\f_\000☼_a\000ùn¶v\200\000\000\000l_a\000à\022@\000 \032@\000\000\000\000\000o\f_\000Ä_a\000ùn¶vo\f_\000¼_a\000o·v"
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at .\problem10.c:27
27             int i=0,result = 0;
(gdb) n
28              while(string1[i] == string2[i])
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$3 = 0
(gdb) n
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 0
New value = 1
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at .\problem10.c:28
28              while(string1[i] == string2[i])
(gdb) n
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 1
New value = 2
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at .\problem10.c:28
28              while(string1[i] == string2[i])
(gdb) p i
$4 = 2
(gdb) n
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 2
New value = 3
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at .\problem10.c:28
28              while(string1[i] == string2[i])
(gdb) p i
$5 = 3
(gdb) n        
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 3
New value = 4
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at .\problem10.c:28
28              while(string1[i] == string2[i])
(gdb) p string1[i]
$6 = 111 'o'
(gdb) n
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) p i
$7 = 4
(gdb) n
Hardware watchpoint 2: i

Old value = 4
New value = 5
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at .\problem10.c:28
28              while(string1[i] == string2[i])
(gdb) p i
$8 = 5
(gdb) n
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 5
New value = 6
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at .\problem10.c:28
28              while(string1[i] == string2[i])
(gdb) pi
(gdb) p i
$9 = 6

        Inferior 1 [process 12560] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem01.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
C program to print your name:
Divya
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
hello
hello is lesser than hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01>


2nd 
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem01.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x40146e: file problem01.c, line 4.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 248.0x211c]
Breakpoint 1, main () at problem01.c:4
4           printf("C program to print your name:\n");//output all types of data.
(gdb) q
A debugging session is active.

        Inferior 1 [process 248] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 12792.0x1838]
[New Thread 12792.0x3a48]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) p str1
$1 = "hello\000a\000ñd·v\b\000\000\000=n¶v#n¶veI\200\005à\022@\000à\022@\000\000\000\000\000 \032@\000D_a\000\bÿa\000Iÿa\000AI¶vQ8Zs_ÿÿÿ\bÿa\000-o¶v \032@\000Pÿa\000û\032@\000 \032@\000\000\000\000\000\000à-"
(gdb) p str2
$2 = "hello\000a\000òpµv\000\000\262\000\000\000\000\000\220\f²\000\061I\200\005\b\000\000\000\220\f²\000\230\f²\000\001\000\000\000\230\f²\000☼_a\000ùn¶v\200\000\000\000l_a\000à\022@\000 \032@\000\000\000\000\000o\f²\000Ä_a\000ùn¶vo\f²\000¼_a\000o·v"
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:27
27             int i=0,result = 0;
(gdb) n
28              while(string1[i] == string2[i])
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$3 = 0
(gdb) n
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 0
New value = 1
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:28
28              while(string1[i] == string2[i])
(gdb) n
30                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) q
A debugging session is active.

        Inferior 1 [process 12792] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 9544.0x2480]
[New Thread 9544.0x2388]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) p str1
$1 = "hello\000a\000ñd·v\b\000\000\000=n¶v#n¶vA§I\026à\022@\000à\022@\000\000\000\000\000A\032@\000D_a\000\bÿa\000Iÿa\000AI¶voÖ\026`_ÿÿÿ\bÿa\000-o¶vA\032@\000Pÿa\000\033\033@\000A\032@\000\000\000\000\000\000@6"
(gdb) p str2
$2 = "hello\000a\000òpµv\000\000»\000\000\000\000\000\220\f»\000§I\026\b\000\000\000\220\f»\000\230\f»\000\001\000\000\000\230\f»\000☼_a\000ùn¶v\200\000\000\000l_a\000à\022@\000A\032@\000\000\000\000\000o\f»\000Ä_a\000ùn¶vo\f»\000¼_a\000o·v"
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:28
28             int i=0,result = 0;
(gdb) n
29              while(string1[i] == string2[i] || string1[i] == string2[i])
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$3 = 0
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 0
New value = 1
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] == string2[i])
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 1
New value = 2
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] == string2[i])
(gdb) p i
$4 = 2
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] == string2[i])
(gdb) q
A debugging session is active.

        Inferior 1 [process 9544] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 8000.0x3270]
[New Thread 8000.0xad4]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) p str1
$1 = "hello\000a\000ñd·v\b\000\000\000=n¶v#n¶vG\026d"à\022@\000à\022@\000\000\000\000\000A\032@\000D_a\000\bÿa\000Iÿa\000AI¶vsg___ÿÿÿ\bÿa\000-o¶vA\032@\000Pÿa\000\033\033@\000A\032@\000\000\000\000\000\000 )"
(gdb) p str2
$2 = "hello\000a\000òpµv\000\000h\000\000\000\000\000\220\fh\000\023\026d"\b\000\000\000\220\fh\000\230\fh\000\001\000\000\000\230\fh\000☼_a\000ùn¶v\200\000\000\000l_a\000à\022@\000A\032@\000\000\000\000\000o\fh\000Ä_a\000ùn¶vo\fh\000¼_a\000o·v"
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:28
28             int i=0,result = 0;
(gdb) n
29              while(string1[i] == string2[i] || string1[i] != string2[i])
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$3 = 0
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 0
New value = 1
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] != string2[i])
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 1
New value = 2
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] != string2[i])
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 2
New value = 3
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] != string2[i])
(gdb) p i
$4 = 3
(gdb) n
[New Thread 8000.0x3890]
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) n
Hardware watchpoint 2: i

Old value = 3
New value = 4
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] != string2[i])
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) i
"info" must be followed by the name of an info command.
List of info subcommands:

info address -- Describe where symbol SYM is stored
info all-registers -- List of all registers and their contents
info args -- Argument variables of current stack frame
info auto-load -- Print current status of auto-loaded files
info auxv -- Display the inferior's auxiliary vector
info bookmarks -- Status of user-settable bookmarks
info breakpoints -- Status of specified breakpoints (all user-settable breakpoints if no argument)
info classes -- All Objective-C classes
info common -- Print out the values contained in a Fortran COMMON block
info copying -- Conditions for redistributing copies of GDB
info dcache -- Print information on the dcache performance
info display -- Expressions to display when program stops
info extensions -- All filename extensions associated with a source language
info files -- Names of targets and files being debugged
info float -- Print the status of the floating point unit
info frame -- All about selected stack frame
info functions -- All function names
info handle -- What debugger does when program gets various signals
info inferiors -- IDs of specified inferiors (all inferiors if no argument)
info line -- Core addresses of the code for a source line
info locals -- Local variables of current stack frame
info macro -- Show the definition of MACRO
info macros -- Show the definitions of all macros at LINESPEC
info mem -- Memory region attributes
info os -- Show OS data ARG
info probes -- Show available static probes
info proc -- Show /proc process information about any running process
info program -- Execution status of the program
info record -- Info record options
info registers -- List of integer registers and their contents
info scope -- List the variables local to a scope
info selectors -- All Objective-C selectors
info set -- Show all GDB settings
info sharedlibrary -- Status of loaded shared object libraries
info signals -- What debugger does when program gets various signals
info skip -- Display the status of skips
info source -- Information about the current source file
info sources -- Source files in the program
info stack -- Backtrace of the stack
info static-tracepoint-markers -- List target static tracepoints markers
info symbol -- Describe what symbol is at location ADDR
info target -- Names of targets and files being debugged
info tasks -- Provide information about all known Ada tasks
info terminal -- Print inferior's saved terminal status
info threads -- Display currently known threads
info tracepoints -- Status of specified tracepoints (all tracepoints if no argument)
info tvariables -- Status of trace state variables and their values
info types -- All type names
info variables -- All global and static variable names
info vector -- Print the status of the vector unit
info vtbl -- Show the virtual function table for a C++ object
info w32 -- Print information specific to Win32 debugging
info warranty -- Various kinds of warranty you do not have
info watchpoints -- Status of specified watchpoints (all watchpoints if no argument)

Type "help info" followed by info subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) p string1[i]
$5 = 111 'o'
(gdb) n
Hardware watchpoint 2: i

Old value = 4
New value = 5
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:29
29              while(string1[i] == string2[i] || string1[i] != string2[i])
(gdb) p i
$6 = 5
(gdb) n
31                  i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) p i
$7 = 5
(gdb) p i
$8 = 5
(gdb) p i
$9 = 5
(gdb) p i
$10 = 5
(gdb)  n
     



     PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hit
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hat
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01>
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
C:\Users\HOME\AppData\Local\Temp\cc8eZ0Pz.o:problem10.c:(.text+0x5b): undefined reference to `output'
collect2.exe: error: ld returned 1 exit status
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
hello
hello is lesser than hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 12108.0x3fcc]
[New Thread 12108.0x1764]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:30
30              int i=0,result = 0;
(gdb)
31              while (string1[i] == string2[i]) 
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = 0
(gdb) p i
$2 = 0
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) p i
$3 = 0
(gdb) watch i
Hardware watchpoint 3: i
(gdb) p i
$4 = 0
(gdb) n
Hardware watchpoint 2: i

Old value = 0
New value = 1
Hardware watchpoint 3: i

Old value = 0
New value = 1
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) s
Hardware watchpoint 2: i

Old value = 1
New value = 2
Hardware watchpoint 3: i

Old value = 1
New value = 2
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) s
Hardware watchpoint 2: i

Old value = 2
New value = 3
Hardware watchpoint 3: i

Old value = 2
New value = 3
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) s
Hardware watchpoint 2: i

Old value = 3
New value = 4
Hardware watchpoint 3: i

Old value = 3
New value = 4
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) s
Hardware watchpoint 2: i

Old value = 4
New value = 5
Hardware watchpoint 3: i

Old value = 4
New value = 5
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) s
Hardware watchpoint 2: i

Old value = 5
New value = 6
Hardware watchpoint 3: i

Old value = 5
New value = 6
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) s
Hardware watchpoint 2: i

Old value = 6
New value = 7
Hardware watchpoint 3: i

Old value = 6
New value = 7
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) s
Hardware watchpoint 2: i

Old value = 7
New value = 8
Hardware watchpoint 3: i

Old value = 7
New value = 8
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) s
40              while(string1[i] > string2[i])
(gdb) s
45              while(string1[i] < string2[i])
(gdb) s
47                  result = -1;
(gdb) s
48                  break;
(gdb) s
50              return result;
(gdb) s
51        }
(gdb) s
can't compute CFA for this frame
0x00401578 in stringcompare (string1=<error reading variable: can't compute CFA for this frame>,
    string2=<error reading variable: can't compute CFA for this frame>) at problem10.c:51
51        }
(gdb) n
can't compute CFA for this frame
(gdb)
can't compute CFA for this frame
(gdb) q
A debugging session is active.

        Inferior 1 [process 12108] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main 
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 5008.0x2bb0]
[New Thread 5008.0x28a4]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) n
hello is lesser than hello15        return 0;
(gdb) q
A debugging session is active.

        Inferior 1 [process 5008] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 15928.0x3128]
[New Thread 15928.0x3c0]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:30
30              int i=0,result = 0;
(gdb) n
31              while (string1[i] == string2[i]) 
(gdb) s
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = 0
(gdb) n
Hardware watchpoint 2: i

Old value = 0
New value = 1
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) watch i
Hardware watchpoint 3: i
(gdb) p i
$2 = 1
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 4: i
(gdb) p i
$3 = 1
(gdb) n
Hardware watchpoint 2: i

Old value = 1
New value = 2
Hardware watchpoint 3: i

Old value = 1
New value = 2
Hardware watchpoint 4: i

Old value = 1
New value = 2
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 5: i
(gdb) p i
$4 = 2
(gdb) n
Hardware watchpoint 2: i

Old value = 2
New value = 3
Hardware watchpoint 3: i

Old value = 2
New value = 3
Hardware watchpoint 4: i

Old value = 2
New value = 3
Hardware watchpoint 5: i

Old value = 2
New value = 3
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 6: i
(gdb) p i
$5 = 3
(gdb) n
Hardware watchpoint 2: i

Old value = 3
New value = 4
Hardware watchpoint 3: i

Old value = 3
New value = 4
Hardware watchpoint 4: i

Old value = 3
New value = 4
Hardware watchpoint 5: i

Old value = 3
New value = 4
Hardware watchpoint 6: i

Old value = 3
New value = 4
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i])
(gdb) n 
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 7: i
(gdb) p i
$6 = 4
(gdb) n
Hardware watchpoint 2: i

Old value = 4
New value = 5
Hardware watchpoint 3: i

Old value = 4
New value = 5
Hardware watchpoint 4: i

Old value = 4
New value = 5
Hardware watchpoint 5: i

Old value = 4
New value = 5
Hardware watchpoint 6: i

Old value = 4
New value = 5
Hardware watchpoint 7: i

Old value = 4
New value = 5
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 8: i
(gdb) p i
$7 = 5
(gdb) n
Hardware watchpoint 2: i

Old value = 5
New value = 6
Hardware watchpoint 3: i

Old value = 5
New value = 6
Hardware watchpoint 4: i

Old value = 5
New value = 6
Hardware watchpoint 5: i

Old value = 5
New value = 6
Hardware watchpoint 6: i

Old value = 5
New value = 6
Hardware watchpoint 7: i

Old value = 5
New value = 6
Hardware watchpoint 8: i

Old value = 5
New value = 6
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) watch i
Hardware watchpoint 9: i
(gdb) p i
$8 = 6
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 10: i
(gdb) p i
$9 = 6
(gdb) n
Hardware watchpoint 2: i

Old value = 6
New value = 7
Hardware watchpoint 3: i

Old value = 6
New value = 7
Hardware watchpoint 4: i

Old value = 6
New value = 7
Hardware watchpoint 5: i

Old value = 6
New value = 7
Hardware watchpoint 6: i

Old value = 6
New value = 7
Hardware watchpoint 7: i

Old value = 6
New value = 7
Hardware watchpoint 8: i

Old value = 6
New value = 7
Hardware watchpoint 9: i

Old value = 6
New value = 7
Hardware watchpoint 10: i

Old value = 6
New value = 7
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i])
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 11: i
(gdb) p i
$10 = 7
(gdb) n
Hardware watchpoint 2: i

Old value = 7
New value = 8
Hardware watchpoint 3: i

Old value = 7
New value = 8
Hardware watchpoint 4: i

Old value = 7
New value = 8
Hardware watchpoint 5: i

Old value = 7
New value = 8
Hardware watchpoint 6: i

Old value = 7
New value = 8
Hardware watchpoint 7: i

Old value = 7
New value = 8
Hardware watchpoint 8: i

Old value = 7
New value = 8
Hardware watchpoint 9: i

Old value = 7
New value = 8
Hardware watchpoint 10: i

Old value = 7
New value = 8
Hardware watchpoint 11: i

Old value = 7
New value = 8
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i]) 
(gdb) n
40              while(string1[i] > string2[i])
(gdb) s
[New Thread 15928.0xde0]
45              while(string1[i] < string2[i])
(gdb) s
47                  result = -1;
(gdb) s
48                  break;
(gdb) s
50              return result;
(gdb) s
51        }
(gdb) s
    string2=<error reading variable: can't compute CFA for this frame>) at problem10.c:51
51        }
(gdb) q
A debugging session is active.

        Inferior 1 [process 15928] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 1552.0x2d60]
[New Thread 1552.0x38f8]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hello
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:30
30              int i=0,result = 0;
(gdb) n
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = 0
(gdb) n
Hardware watchpoint 2: i

Old value = 0
New value = 1
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) watch i
Hardware watchpoint 3: i
(gdb) p i
$2 = 1
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 4: i
(gdb) p i
$3 = 1
(gdb) n
Hardware watchpoint 2: i

Old value = 1
New value = 2
Hardware watchpoint 3: i

Old value = 1
New value = 2
Hardware watchpoint 4: i

Old value = 1
New value = 2
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) watch i
Hardware watchpoint 5: i
(gdb) p i
$4 = 2
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 6: i
(gdb) p i
$5 = 2
(gdb) n
Hardware watchpoint 2: i

Old value = 2
New value = 3
Hardware watchpoint 3: i

Old value = 2
New value = 3
Hardware watchpoint 4: i

Old value = 2
New value = 3
Hardware watchpoint 5: i

Old value = 2
New value = 3
Hardware watchpoint 6: i

Old value = 2
New value = 3
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 7: i
(gdb) p i
$6 = 3
(gdb) n
Hardware watchpoint 2: i

Old value = 3
New value = 4
Hardware watchpoint 3: i

Old value = 3
New value = 4
Hardware watchpoint 4: i

Old value = 3
New value = 4
Hardware watchpoint 5: i

Old value = 3
New value = 4
Hardware watchpoint 6: i

Old value = 3
New value = 4
Hardware watchpoint 7: i

Old value = 3
New value = 4
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n     
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 8: i
(gdb) p i
$7 = 4
(gdb) n
Hardware watchpoint 2: i

Old value = 4
New value = 5
Hardware watchpoint 3: i

Old value = 4
New value = 5
Hardware watchpoint 4: i

Old value = 4
New value = 5
Hardware watchpoint 5: i

Old value = 4
New value = 5
Hardware watchpoint 6: i

Old value = 4
New value = 5
Hardware watchpoint 7: i

Old value = 4
New value = 5
Hardware watchpoint 8: i

Old value = 4
New value = 5
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n      
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 9: i
(gdb) p i
$8 = 5
(gdb) n
Hardware watchpoint 2: i

Old value = 5
New value = 6
Hardware watchpoint 3: i

Old value = 5
New value = 6
Hardware watchpoint 4: i

Old value = 5
New value = 6
Hardware watchpoint 5: i

Old value = 5
New value = 6
Hardware watchpoint 6: i

Old value = 5
New value = 6
Hardware watchpoint 7: i

Old value = 5
New value = 6
Hardware watchpoint 8: i

Old value = 5
New value = 6
Hardware watchpoint 9: i

Old value = 5
New value = 6
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 10: i
(gdb) p i
$9 = 6
(gdb) n
Hardware watchpoint 2: i

Old value = 6
New value = 7
Hardware watchpoint 3: i

Old value = 6
New value = 7
Hardware watchpoint 4: i

Old value = 6
New value = 7
Hardware watchpoint 5: i

Old value = 6
New value = 7
Hardware watchpoint 6: i

Old value = 6
New value = 7
Hardware watchpoint 7: i

Old value = 6
New value = 7
Hardware watchpoint 8: i

Old value = 6
New value = 7
Hardware watchpoint 9: i

Old value = 6
New value = 7
Hardware watchpoint 10: i

Old value = 6
New value = 7
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 11: i
(gdb) p i
$10 = 7
(gdb) n
Hardware watchpoint 2: i

Old value = 7
New value = 8
Hardware watchpoint 3: i

Old value = 7
New value = 8
Hardware watchpoint 4: i

Old value = 7
New value = 8
Hardware watchpoint 5: i

Old value = 7
New value = 8
Hardware watchpoint 6: i

Old value = 7
New value = 8
Hardware watchpoint 7: i

Old value = 7
New value = 8
Hardware watchpoint 8: i

Old value = 7
New value = 8
Hardware watchpoint 9: i

Old value = 7
New value = 8
Hardware watchpoint 10: i

Old value = 7
New value = 8
Hardware watchpoint 11: i

Old value = 7
New value = 8
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) i
"info" must be followed by the name of an info command.
List of info subcommands:

info address -- Describe where symbol SYM is stored
info all-registers -- List of all registers and their contents
info args -- Argument variables of current stack frame
info auto-load -- Print current status of auto-loaded files
info auxv -- Display the inferior's auxiliary vector
info bookmarks -- Status of user-settable bookmarks
info breakpoints -- Status of specified breakpoints (all user-settable breakpoints if no argument)
info classes -- All Objective-C classes
info common -- Print out the values contained in a Fortran COMMON block
info copying -- Conditions for redistributing copies of GDB
info dcache -- Print information on the dcache performance
info display -- Expressions to display when program stops
info extensions -- All filename extensions associated with a source language
info files -- Names of targets and files being debugged
info float -- Print the status of the floating point unit
info frame -- All about selected stack frame
info functions -- All function names
info handle -- What debugger does when program gets various signals
info inferiors -- IDs of specified inferiors (all inferiors if no argument)
info line -- Core addresses of the code for a source line
info locals -- Local variables of current stack frame
info macro -- Show the definition of MACRO
info macros -- Show the definitions of all macros at LINESPEC
info mem -- Memory region attributes
info os -- Show OS data ARG
info probes -- Show available static probes
info proc -- Show /proc process information about any running process
info program -- Execution status of the program
info record -- Info record options
info registers -- List of integer registers and their contents
info scope -- List the variables local to a scope
info selectors -- All Objective-C selectors
info set -- Show all GDB settings
info sharedlibrary -- Status of loaded shared object libraries
info signals -- What debugger does when program gets various signals
info skip -- Display the status of skips
info source -- Information about the current source file
info sources -- Source files in the program
info stack -- Backtrace of the stack
info static-tracepoint-markers -- List target static tracepoints markers
info symbol -- Describe what symbol is at location ADDR
info target -- Names of targets and files being debugged
info tasks -- Provide information about all known Ada tasks
info terminal -- Print inferior's saved terminal status
info threads -- Display currently known threads
info tracepoints -- Status of specified tracepoints (all tracepoints if no argument)
info tvariables -- Status of trace state variables and their values
info types -- All type names
info variables -- All global and static variable names
info vector -- Print the status of the vector unit
info vtbl -- Show the virtual function table for a C++ object
info w32 -- Print information specific to Win32 debugging
info warranty -- Various kinds of warranty you do not have
info watchpoints -- Status of specified watchpoints (all watchpoints if no argument)

Type "help info" followed by info subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) p i
$11 = 8
(gdb) n
Hardware watchpoint 2: i

Old value = 8
New value = 9
Hardware watchpoint 3: i

Old value = 8
New value = 9
Hardware watchpoint 4: i

Old value = 8
New value = 9
Hardware watchpoint 5: i

Old value = 8
New value = 9
Hardware watchpoint 6: i

Old value = 8
New value = 9
Hardware watchpoint 7: i

Old value = 8
New value = 9
Hardware watchpoint 8: i

Old value = 8
New value = 9
Hardware watchpoint 9: i

Old value = 8
New value = 9
Hardware watchpoint 10: i

Old value = 8
New value = 9
Hardware watchpoint 11: i

Old value = 8
New value = 9
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb) n
[New Thread 1552.0x2c8c]
37                 i++;// this block represent the exection as long as the string1[i] and string2[i] are equal
(gdb) watch i
Hardware watchpoint 12: i
(gdb) p i
$12 = 9
(gdb) n
Hardware watchpoint 2: i

Old value = 9
New value = 10
Hardware watchpoint 3: i

Old value = 9
New value = 10
Hardware watchpoint 4: i

Old value = 9
New value = 10
Hardware watchpoint 5: i

Old value = 9
New value = 10
Hardware watchpoint 6: i

Old value = 9
New value = 10
Hardware watchpoint 7: i

Old value = 9
New value = 10
Hardware watchpoint 8: i

Old value = 9
New value = 10
Hardware watchpoint 9: i

Old value = 9
New value = 10
Hardware watchpoint 10: i

Old value = 9
New value = 10
Hardware watchpoint 11: i

Old value = 9
New value = 10
Hardware watchpoint 12: i

Old value = 9
New value = 10
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:31
31              while (string1[i] == string2[i] || string1[i]!='\0' && string2[i]!='\0') 
(gdb)



PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963> dir


    Directory: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
da---l        25-01-2024     17:08                .vscode
da---l        05-02-2024     15:58                set01
da---l        30-01-2024     16:24                set03                                                                             
da---l        30-01-2024     16:51                set04
da---l        18-01-2024     17:41                set05
-a---l        18-01-2024     17:41            495 .gitignore
-a---l        18-01-2024     17:41             65 .replit
-a---l        18-01-2024     17:41            276 README.md


PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963> pwd    

Path
----
C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963


PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963> cd ..
PS C:\Users\HOME\OneDrive\Desktop\C> dir
    Directory: C:\Users\HOME\OneDrive\Desktop\C


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
da---l        25-01-2024     17:08                c-activity-sets-divya963
-a---l        18-01-2024     16:23              0 1.c


PS C:\Users\HOME\OneDrive\Desktop\C> cd .\c-activity-sets-divya963 
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963> dir


    Directory: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
da---l        25-01-2024     17:08                .vscode
da---l        05-02-2024     15:58                set01
da---l        30-01-2024     16:24                set03
da---l        18-01-2024     17:41                set05
-a---l        18-01-2024     17:41            495 .gitignore
-a---l        18-01-2024     17:41             65 .replit
-a---l        18-01-2024     17:41             57 replit.nix
-a---l        18-01-2024     17:41          99994 Untitled-1.txt


PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963> git add .
warning: in the working copy of '.vscode/tasks.json', LF will be replaced by CRLF the next time Git touches it
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963> git commit -m "test"
[main 40fed58] test
 24 files changed, 979 insertions(+), 20 deletions(-)
Counting objects: 100% (75/75), done.
Delta compression using up to 4 threads
Compressing objects: 100% (65/65), done.
Total 66 (delta 20), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (20/20), completed with 2 local objects.
To https://github.com/RVU-BSC-CSDSDE-2022/c-activity-sets-divya963
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hit
hat
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:head
hit
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:helo
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
world
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
problem10.c:42:1: error: expected identifier or '(' before '}' token
 }
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:helo
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
helo
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
hel
hello is greater than hel
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
hello
hello is equal to hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> git add .
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> git commit -m "test"
[main 0721ddd] test
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Writing objects: 100% (4/4), 462 bytes | 231.00 KiB/s, done.
Total 4 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
   40fed58..0721ddd  main -> main
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c     
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
hello is greater than Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hit
hat
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
hello
hello is equal to hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:Hello
hello
Hello is equal to hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> git add .
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> git commit -m "test"
[main 903f7c9] test
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 372 bytes | 26.00 KiB/s, done.
Total 4 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
To https://github.com/RVU-BSC-CSDSDE-2022/c-activity-sets-divya963
   0721ddd..903f7c9  main -> main
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 4108.0x3064]
[New Thread 4108.0x1088]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
hellO
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hellO") at problem10.c:26
26          int i,result =0;
(gdb) n
27          for(i=0;string1[1] == string2[2] && string2[i]!='\0';i++)
(gdb) point i
Undefined command: "point".  Try "help".
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = 2133280821
(gdb) p i
$2 = 2133280821
(gdb) n
Hardware watchpoint 2: i

Old value = 2133280821
New value = 0
0x00401509 in stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hellO") at problem10.c:27
27          for(i=0;string1[1] == string2[2] && string2[i]!='\0';i++)
(gdb) p i
$3 = 0
(gdb) n
40          return result;
(gdb) q

        Inferior 1 [process 4108] will be killed.

error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
hello is greater than Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hit
hat
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
olla
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
world
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hollo
Hollo
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
hello is equal to Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
hello
hello is equal to hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
hello is equal to Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:world
hello
world is equal to hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
Helllo
hello is equal to Helllo
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 2364.0x2384]
[New Thread 2364.0x2e20]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
Hello
13          resultt = stringcompare(str1,str2);
(gdb) s 
(gdb) n
27          for(i=0;string1[1] == string2[2] && string2[i]!='\0';i++)
(gdb) q
        Inferior 1 [process 2364] will be killed.

Quit anyway? (y or n) y
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
Hello
hello is equal to Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe        
Enter the strings:hello
Hello
hello is equal to Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 16376.0x2ba8]
[New Thread 16376.0x23c0]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
Hello
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "Hello") at problem10.c:26
26          int i,result =0;
(gdb) n
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = 1554472768
(gdb) n
Hardware watchpoint 2: i

Old value = 1554472768
New value = 0
0x00401509 in stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "Hello") at problem10.c:27
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 3: i
(gdb) n
36              while(string1[i]<string2[i])
(gdb) q
        Inferior 1 [process 16376] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> ./a.exe
Enter the strings:hello
Hello
hello is equal to Hello
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 15300.0x27f0]
[New Thread 15300.0x2a44]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
Hello
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "Hello") at problem10.c:26
26          int i,result =0;
(gdb) n
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = -1340310795
(gdb) n
[New Thread 15300.0x644]
Hardware watchpoint 2: i

Old value = -1340310795
New value = 0
0x00401509 in stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "Hello") at problem10.c:27
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 3: i
(gdb) p i
$2 = 0
(gdb) watch i
Hardware watchpoint 4: i
(gdb) n
36              while(string1[i]<string2[i])
(gdb) q
A debugging session is active.

        Inferior 1 [process 15300] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 1160.0x28bc]
[New Thread 1160.0xbc0]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
(gdb) n
14          output(str1,str2,resultt);
(gdb) q
A debugging session is active.

        Inferior 1 [process 1160] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 5788.0x1b40]
[New Thread 5788.0x2e70]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:[New Thread 5788.0x1680]
q       
$1 = -1340310795
13          resultt = stringcompare(str1,str2);
(gdb)
14          output(str1,str2,resultt);
(gdb)
q is equal to $115          return 0;
(gdb)
16        }
(gdb)
0x00401288 in __register_frame_info ()
(gdb)
Single stepping until exit from function __register_frame_info,
which has no line number information.
0x0040128a in __register_frame_info ()
(gdb)
Single stepping until exit from function __register_frame_info,
which has no line number information.
0x0040128f in __register_frame_info ()
(gdb) 
Single stepping until exit from function __register_frame_info,
(gdb)
Single stepping until exit from function __register_frame_info,
which has no line number information.
[Inferior 1 (process 5788) exited normally]
(gdb)
The program is not being run.
(gdb)
The program is not being run.
(gdb) q
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 13364.0xc1c]
[New Thread 13364.0x26c]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello
world
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "world") at problem10.c:26
26          int i,result =0;
(gdb) n
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = -622566239
(gdb) n
Hardware watchpoint 2: i

Old value = -622566239
New value = 0
0x00401509 in stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "world") at problem10.c:27
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 3: i
(gdb) n
38              while(string1[i]<string2[i])
(gdb) q
A debugging session is active.

        Inferior 1 [process 13364] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 8432.0x2888]
[New Thread 8432.0x2268]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:world
hello
13          resultt = stringcompare(str1,str2);
(gdb) s
stringcompare (string1=0x61feb8 "world", string2=0x61fe54 "hello") at problem10.c:26
26          int i,result =0;
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = 1408725943
(gdb) n
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 3: i
(gdb) p i
$2 = 1408725943
(gdb) n
Hardware watchpoint 2: i

Old value = 1408725943
New value = 0
Hardware watchpoint 3: i

Old value = 1408725943
New value = 0
0x00401509 in stringcompare (string1=0x61feb8 "world", string2=0x61fe54 "hello") at problem10.c:27
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 4: i
(gdb) p i
$3 = 0
(gdb) n
38              while(string1[i]<string2[i])
(gdb) watch i
Hardware watchpoint 5: i
(gdb) n
44          return result;
(gdb) q
A debugging session is active.

        Inferior 1 [process 8432] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gcc -g -O0 problem10.c
PS C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01\a.exe...done.
(gdb) b main
Breakpoint 1 at 0x401471: file problem10.c, line 12.
(gdb) r
Starting program: C:\Users\HOME\OneDrive\Desktop\C\c-activity-sets-divya963\set01/a.exe 
[New Thread 4000.0x3abc]
[New Thread 4000.0x103c]

Breakpoint 1, main () at problem10.c:12
12          input_two_strings(str1,str2);
(gdb) n
Enter the strings:hello 
hello
13          resultt = stringcompare(str1,str2);
(gdb) s 
stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:26
26          int i,result =0;
(gdb) watch i
Hardware watchpoint 2: i
(gdb) p i
$1 = 1227132188
(gdb) n
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 3: i
(gdb) p i
$2 = 1227132188
(gdb) n
Hardware watchpoint 2: i

Old value = 1227132188
New value = 0
Hardware watchpoint 3: i

Old value = 1227132188
New value = 0
0x00401509 in stringcompare (string1=0x61feb8 "hello", string2=0x61fe54 "hello") at problem10.c:27
27          for(i=0;string1[i] == string2[i] && string2[i]!='\0';i++)
(gdb) watch i
Hardware watchpoint 4: i
(gdb) p i
$3 = 0
(gdb) n
33              while(string1[i]>string2[i])
(gdb)